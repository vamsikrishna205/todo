{"version":3,"sources":["logo.svg","Components/Todo/Todo_store.js","Components/Todo/Todo_Web.js","Components/Switch/Toggle_Switch.js","Components/Images/maylee.png","Components/searchnav/side_navbar.js","Components/searchnav/side_navbar_copy.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","todolist","deleteHandler","map","todo","index","class","id","onClick","Divider","Todoweb","useState","task","setTask","todos","setTodos","href","Button","onSubmit","e","preventDefault","newTodos","type","name","value","onChange","target","placeholder","indexValue","filter","withStyles","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","makeStyles","display","alignItems","center","appBar","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","marginTop","drawerFooter","grow","flexGrow","breakpoints","up","position","shape","alpha","marginLeft","pointerEvents","paddingLeft","down","drawerWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,I,kHCkCAA,EAzBE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC1B,OACI,8BACKD,EAASE,KAAI,SAACC,EAAMC,GAAP,OACV,sBAAiBC,MAAM,aAAvB,UAEI,sBAAKA,MAAM,SAAX,UACI,qBAAKA,MAAM,WAAX,SACI,wBAAQA,MAAM,UAAUC,GAAG,MAA3B,SAAkC,cAAC,IAAD,QAEtC,sBAAKD,MAAM,UAAUC,GAAG,SAAxB,UAAkCH,EAAlC,aACA,sBAAKE,MAAM,aAAX,UACI,wBAAQA,MAAM,UAAd,SAAwB,cAAC,IAAD,MACxB,wBAAQA,MAAM,UAAUE,QAAS,kBAAMN,EAAcG,IAArD,SAA6D,cAAC,IAAD,YAIrE,cAACI,EAAA,EAAD,MAbMJ,S,SC4CXK,EAjDC,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAcA,OACI,qBAAKT,MAAM,sBAAX,SAEI,sBAAKA,MAAM,yBAAX,UACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,aAAX,SAAwB,cAAC,IAAD,CAA6BC,GAAG,gBACxD,sBAAKD,MAAM,YAAX,UACI,qBAAKA,MAAM,WAAX,wBACA,qBAAKA,MAAM,eAAX,sEAEJ,qBAAKA,MAAM,WAAX,SACI,mBAAGA,MAAM,YAAYU,KAAK,6CAA1B,SAAuE,cAACC,EAAA,EAAD,0BAG/E,qBAAKX,MAAM,kBAAX,SACI,uBAAMA,MAAM,cAAcY,SAzBpB,SAAAC,GAClBA,EAAEC,iBACF,IAAMC,EAAQ,sBAAOP,GAAP,CAAcF,IAC5BG,EAASM,GACTR,EAAQ,KAqBI,UACI,uBAAOP,MAAM,cAAcgB,KAAK,OAAOC,KAAK,OAAOC,MAAOZ,EAAMa,SA7B9D,SAAAN,GAClBN,EAAQM,EAAEO,OAAOF,QA4BwFG,YAAY,2BACrG,uBAAOrB,MAAM,aAAagB,KAAK,SAASE,MAAM,6BAA6BD,KAAK,aAIxF,oBAAGjB,MAAM,aAAT,wEAEI,mBAAGA,MAAM,aAAaU,KAAK,qDAAqDU,OAAO,SAAvF,mCAEJ,cAAC,EAAD,CAAUzB,SAAUa,EAAOZ,cA7BjB,SAAC0B,GACnB,IAAMP,EAAWP,EAAMe,QAAO,SAACzB,EAAMC,GAAP,OAAiBA,IAAUuB,KACzDb,EAASM,Y,kPChBCS,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,GACPC,OAAQ,GACRC,QAAS,EACTC,OAAQL,EAAMM,QAAQ,IAE1BC,WAAY,CACRH,QAAS,EACT,YAAa,CACTI,UAAW,mBACXC,MAAOT,EAAMU,QAAQC,OAAOC,MAC5B,aAAc,CACVC,gBAAiB,UACjBC,QAAS,EACTC,OAAQ,SAGhB,wBAAyB,CACrBN,MAAO,UACPM,OAAQ,mBAGhBC,MAAO,CACHd,MAAO,GACPC,OAAQ,IAEZc,MAAO,CACHC,aAAc,GACdH,OAAO,aAAD,OAAef,EAAMU,QAAQS,KAAK,MACxCN,gBAAiBb,EAAMU,QAAQS,KAAK,IACpCL,QAAS,EACTM,WAAYpB,EAAMqB,YAAYC,OAAO,CAAC,mBAAoB,YAE9DC,QAAS,GACTC,aAAc,MAnCAzB,EAoCd,YAA4B,IAAzB0B,EAAwB,EAAxBA,QAAYC,EAAY,iBAC3B,OACI,cAACC,EAAA,EAAD,aACIC,sBAAuBH,EAAQD,aAC/BK,eAAa,EACbJ,QAAS,CACLxB,KAAMwB,EAAQxB,KACdM,WAAYkB,EAAQlB,WACpBS,MAAOS,EAAQT,MACfC,MAAOQ,EAAQR,MACfM,QAASE,EAAQF,UAEjBG,O,MCtDD,I,MCsCGI,aAAW,SAAC9B,GAAD,kBACzBC,KAAM,CACF8B,QAAS,OACTC,WAAYhC,EAAMiC,QAEtBC,OAAQ,CACJd,WAAYpB,EAAMqB,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDa,OAAQnC,EAAMqB,YAAYc,OAAOC,MACjCC,SAAUrC,EAAMqB,YAAYgB,SAASC,iBAI7CC,YAAa,CACTrC,MAAM,eAAD,OAfO,IAeP,OAELkB,WAAYpB,EAAMqB,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDa,OAAQnC,EAAMqB,YAAYc,OAAOK,QACjCH,SAAUrC,EAAMqB,YAAYgB,SAASI,kBAG7CC,WAAY,CACRC,YAAa3C,EAAMM,QAAQ,IAE/BsC,KAAM,CACFb,QAAS,QAEbc,OAAQ,CACJ3C,MA7BY,IA8BZ4C,WAAY,GAEhBC,YAAa,CACT7C,MAjCY,KAmChB8C,aAAa,yBACTjB,QAAS,OACTC,WAAY,SACZ5B,QAASJ,EAAMM,QAAQ,EAAG,IAEvBN,EAAMiD,OAAOC,SALR,IAMRC,eAAgB,WAChBC,UAAW,QAEfC,aAAc,CACVD,UAAW,OACXrB,QAAS,QAEbuB,KAAM,CACFC,SAAU,IA/CW,2BAiDb,CACRZ,YAAa3C,EAAMM,QAAQ,KAlDN,mCAqDrByB,QAAS,QACR/B,EAAMwD,YAAYC,GAAG,MAAQ,CAC1B1B,QAAS,WAvDQ,oCA2DrB2B,SAAU,WACVxC,aAAclB,EAAM2D,MAAMzC,aAC1BL,gBAAiB+C,YAAM5D,EAAMU,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACPC,gBAAiB+C,YAAM5D,EAAMU,QAAQC,OAAOC,MAAO,MAEvD+B,YAAa3C,EAAMM,QAAQ,GAC3BuD,WAAY7D,EAAMM,QAAQ,IAC1BJ,MAAO,OACPC,OAAQ,MACPH,EAAMwD,YAAYC,GAAG,MAAQ,CAC1BI,WAAY7D,EAAMM,QAAQ,GAC1BJ,MAAO,UAvEU,2BA0Eb,CACRE,QAASJ,EAAMM,QAAQ,EAAG,GAC1BH,OAAQ,OACRuD,SAAU,WACVI,cAAe,OACf/B,QAAS,OACTC,WAAY,SACZmB,eAAgB,SAChB1C,MAAO,UAlFc,0BAoFd,CACPA,MAAO,QACPN,OAAQ,SAtFa,+BAyFrBC,QAASJ,EAAMM,QAAQ,EAAG,EAAG,EAAG,GAEhCyD,YAAY,cAAD,OAAgB/D,EAAMM,QAAQ,GAA9B,OACXc,WAAYpB,EAAMqB,YAAYC,OAAO,SACrCpB,MAAO,QA7Fc,cA8FpBF,EAAMwD,YAAYQ,KAAK,MAAQ,CAC5B9D,MAAO,SA/FU,cAiGpBF,EAAMwD,YAAYQ,KAAK,MAAQ,CAC5B9D,MAAO,SAlGU,cAoGpBF,EAAMwD,YAAYQ,KAAK,MAAQ,CAC5B9D,MAAO,SArGU,cAuGpBF,EAAMwD,YAAYQ,KAAK,MAAQ,CAC5B9D,MAAO,SAxGU,gDA4GrB6B,QAAS,QACR/B,EAAMwD,YAAYC,GAAG,MAAQ,CAC1B1B,QAAS,UA9GQ,2CAkHrBA,QAAS,QACR/B,EAAMwD,YAAYC,GAAG,MAAQ,CAC1B1B,QAAS,UApHQ,yCAwHpB/B,EAAMwD,YAAYQ,KAAK,MAAQ,CAC5BjC,QAAS,UAzHQ,KCD7B,IAAMkC,EAAc,IAEFnC,aAAW,SAAC9B,GAAD,kBACzBC,KAAM,CACF8B,QAAS,OACTC,WAAYhC,EAAMiC,QAEtBC,OAAQ,CACJd,WAAYpB,EAAMqB,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDa,OAAQnC,EAAMqB,YAAYc,OAAOC,MACjCC,SAAUrC,EAAMqB,YAAYgB,SAASC,iBAI7CC,YAAa,CACTrC,MAAM,eAAD,OAAiB+D,EAAjB,OACLJ,WAAYI,EACZ7C,WAAYpB,EAAMqB,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDa,OAAQnC,EAAMqB,YAAYc,OAAOK,QACjCH,SAAUrC,EAAMqB,YAAYgB,SAASI,kBAG7CC,WAAY,CACRC,YAAa3C,EAAMM,QAAQ,IAE/BsC,KAAM,CACFb,QAAS,QAEbc,OAAQ,CACJ3C,MAAO+D,EACPnB,WAAY,GAEhBC,YAAa,CACT7C,MAAO+D,GAEXjB,aAAa,yBACTjB,QAAS,OACTC,WAAY,SACZ5B,QAASJ,EAAMM,QAAQ,EAAG,IAEvBN,EAAMiD,OAAOC,SALR,IAMRC,eAAgB,WAChBC,UAAW,QAEfC,aAAc,CACVD,UAAW,OACXrB,QAAS,QAEbuB,KAAM,CACFC,SAAU,IA/CW,2BAiDb,CACRZ,YAAa3C,EAAMM,QAAQ,KAlDN,mCAqDrByB,QAAS,QACR/B,EAAMwD,YAAYC,GAAG,MAAQ,CAC1B1B,QAAS,WAvDQ,oCA2DrB2B,SAAU,WACVxC,aAAclB,EAAM2D,MAAMzC,aAC1BL,gBAAiB+C,YAAM5D,EAAMU,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACPC,gBAAiB+C,YAAM5D,EAAMU,QAAQC,OAAOC,MAAO,MAEvD+B,YAAa3C,EAAMM,QAAQ,GAC3BuD,WAAY7D,EAAMM,QAAQ,GAC1BJ,MAAO,OACPC,OAAQ,MACPH,EAAMwD,YAAYC,GAAG,MAAQ,CAC1BI,WAAY7D,EAAMM,QAAQ,GAC1BJ,MAAO,UAvEU,2BA0Eb,CACRE,QAASJ,EAAMM,QAAQ,EAAG,GAC1BH,OAAQ,OACRuD,SAAU,WACVI,cAAe,OACf/B,QAAS,OACTC,WAAY,SACZmB,eAAgB,SAChB1C,MAAO,UAlFc,0BAoFd,CACPA,MAAO,QACPN,OAAQ,SAtFa,+BAyFrBC,QAASJ,EAAMM,QAAQ,EAAG,EAAG,EAAG,GAEhCyD,YAAY,cAAD,OAAgB/D,EAAMM,QAAQ,GAA9B,OACXc,WAAYpB,EAAMqB,YAAYC,OAAO,SACrCpB,MAAO,QA7Fc,cA8FpBF,EAAMwD,YAAYQ,KAAK,MAAQ,CAC5B9D,MAAO,SA/FU,cAiGpBF,EAAMwD,YAAYQ,KAAK,MAAQ,CAC5B9D,MAAO,SAlGU,cAoGpBF,EAAMwD,YAAYQ,KAAK,MAAQ,CAC5B9D,MAAO,SArGU,cAuGpBF,EAAMwD,YAAYQ,KAAK,MAAQ,CAC5B9D,MAAO,SAxGU,gDA4GrB6B,QAAS,QACR/B,EAAMwD,YAAYC,GAAG,MAAQ,CAC1B1B,QAAS,UA9GQ,2CAkHrBA,QAAS,QACR/B,EAAMwD,YAAYC,GAAG,MAAQ,CAC1B1B,QAAS,UApHQ,yCAwHpB/B,EAAMwD,YAAYQ,KAAK,MAAQ,CAC5BjC,QAAS,UAzHQ,KCzBdmC,MAPf,WACE,OACE,8BAAK,cAAC,EAAD,OCGMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.727935a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react, { useState } from 'react';\r\nimport './styles.css'\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\n\r\nconst TodoList = ({ todolist, deleteHandler }) => {\r\n    return (\r\n        <div>\r\n            {todolist.map((todo, index) =>\r\n                <div key={index} class=\"todo_class\">\r\n\r\n                    <div class=\"to_log\">\r\n                        <div class=\"tick_but\">\r\n                            <button class=\"del_but\" id=\"but\" ><CheckRoundedIcon /></button>\r\n                        </div>\r\n                        <div class=\"cont_to\" id=\"strike\">{todo}  &nbsp; </div>\r\n                        <div class=\"icons_cont\">\r\n                            <button class=\"del_but\"><EditIcon /></button>\r\n                            <button class=\"del_but\" onClick={() => deleteHandler(index)}><DeleteRoundedIcon /></button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <Divider />\r\n                </div>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\nimport react, { useState } from 'react';\r\nimport PlaylistAddCheckRoundedIcon from '@material-ui/icons/PlaylistAddCheckRounded';\r\nimport { Input } from '@material-ui/core';\r\nimport './styles.css'\r\nimport TodoList from './Todo_store';\r\nimport { Button } from '@material-ui/core'\r\n\r\nconst Todoweb = () => {\r\n    const [task, setTask] = useState(\"\");\r\n    const [todos, setTodos] = useState([]);\r\n    const changeHandler = e => {\r\n        setTask(e.target.value)\r\n    }\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        const newTodos = [...todos, task];\r\n        setTodos(newTodos);\r\n        setTask(\"\");\r\n    }\r\n    const deleteHandler = (indexValue) => {\r\n        const newTodos = todos.filter((todo, index) => index !== indexValue);\r\n        setTodos(newTodos);\r\n    }\r\n    return (\r\n        <div class=\"Todo_Main_Container\">\r\n\r\n            <div class=\"Todo_Content_Container\">\r\n                <div class=\"Todo_Header\">\r\n                    <div class=\"list_image\"><PlaylistAddCheckRoundedIcon id=\"list_icon\" /></div>\r\n                    <div class=\"Todo_Head\">\r\n                        <div class=\"Todo_App\">To Do Apps</div>\r\n                        <div class=\"Todo_Subhead\">All Your to do list. Just check it whenever You done.</div>\r\n                    </div>\r\n                    <div class=\"Home_tab\">\r\n                        <a class=\"Home_link\" href=\"https://vamsikrishna205.github.io/outlook/\"><Button>Home</Button></a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"input_Container\">\r\n                    <form class=\"form_input1\" onSubmit={submitHandler}>\r\n                        <input class=\"input_field\" type=\"text\" name=\"task\" value={task} onChange={changeHandler} placeholder=\"What needs to be done?\" />\r\n                        <input class=\"submit_but\" type=\"submit\" value=\"Press enter to submit task\" name=\"Add\" />\r\n                    </form>\r\n\r\n                </div>\r\n                <p class=\"text_terms\">\r\n                    Once you submit, its mean you have agreed with our &nbsp;&nbsp;\r\n                    <a class=\"link_terms\" href=\"http://enlite.ux-maestro.com:3001/terms-conditions\" target=\"_blank\">terms &amp; conditions</a>\r\n                </p>\r\n                <TodoList todolist={todos} deleteHandler={deleteHandler} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Todoweb;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst IOSSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 36,\r\n        height: 20,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 18,\r\n        height: 18,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\n\r\nexport default function Ios_Switch() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <FormGroup>\r\n            <FormControlLabel\r\n                control={<IOSSwitch checked={state.checkedB} onChange={handleChange} name=\"checkedB\" />}\r\n            />\r\n        </FormGroup>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/maylee.87d75ce5.png\";","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Ios_Switch from '../Switch/Toggle_Switch'\r\nimport HDWY from '../Images/HDWY.png'\r\nimport '../searchnav/styles.css'\r\nimport maylee from '../Images/maylee.png'\r\nimport DashboardRoundIcon from '@material-ui/icons/Dashboard';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport MenuBookRoundedIcon from '@material-ui/icons/MenuBookRounded';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: theme.center,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n        marginTop: '5px',\r\n    },\r\n    drawerFooter: {\r\n        marginTop: 'auto',\r\n        display: 'flex',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(5),\r\n        marginLeft: theme.spacing(10),\r\n        width: '100%',\r\n        height: '50',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(0),\r\n            width: '100%',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: 'black',\r\n    },\r\n    inputRoot: {\r\n        color: 'black',\r\n        height: '50px',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.down('lg')]: {\r\n            width: '80ch',\r\n        },\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '50ch',\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '30ch',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    Menu_Wrap: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none',\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(true);\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"\" color=\"primary\" >\r\n                    <Badge badgeContent={10} color=\"secondary\"  >\r\n                        <SettingsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"primary\">\r\n                    <Badge badgeContent=\"\" variant=\"dot\"\r\n                        color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen} >\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                    marginBottom=\"0px\"\r\n                >\r\n                    <Ios_Switch />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar id=\"App_Bar\"\r\n                position=\"fixed\"\r\n\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar id=\"App_Main\">\r\n\r\n                    <IconButton\r\n                        color=\"black\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.Menu_Wrap}>\r\n                    </Typography>\r\n                    <div className={classes.search} >\r\n                        <div className={classes.searchIcon} >\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}  >\r\n                        <IconButton aria-label=\"show 17 new notifications\" id=\"Not_Icon\">\r\n                            <Badge badgeContent=\"\" variant=\"dot\" color=\"default\">\r\n                                <div ><NotificationsIcon /></div>\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"\" color=\"black\" id=\"Set_icon\">\r\n                            <Badge color=\"Primary\" id=\"set_opt\" >\r\n                                <SettingsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton id=\"nav_dot\"\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"black\"\r\n                            marginBottom=\"0px\"\r\n                        >\r\n                            <Ios_Switch />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"black\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader} >\r\n                    <div class=\"inside_menu\">\r\n                        <div class=\"logo_image\">\r\n                            <img src={HDWY} class=\"menu_image\" /></div>\r\n                        <div class=\"Menu_Name\">Menu</div>\r\n                    </div>\r\n                    <IconButton onClick={handleDrawerClose} id=\"Hide_icon\">\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <DashboardRoundIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Todo\" />\r\n                    </ListItem>\r\n\r\n                </List>\r\n                <Divider />\r\n                <div className={classes.drawerFooter} >\r\n                    <div class=\"inside_menu\" >\r\n                        <div class=\"user_image\">\r\n                            <img src={maylee} class=\"menu_image\" /></div>\r\n                        <div class=\"user_Name\">Maylee Bettle</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Ios_Switch from '../Switch/Toggle_Switch'\r\nimport HDWY from '../Images/HDWY.png'\r\nimport '../searchnav/styles.css'\r\nimport maylee from '../Images/maylee.png'\r\nimport DashboardRoundIcon from '@material-ui/icons/Dashboard';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport MenuBookRoundedIcon from '@material-ui/icons/MenuBookRounded';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: theme.center,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n        marginTop: '6px',\r\n    },\r\n    drawerFooter: {\r\n        marginTop: 'auto',\r\n        display: 'flex',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(5),\r\n        marginLeft: theme.spacing(5),\r\n        width: '100%',\r\n        height: '50',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(0),\r\n            width: '100%',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: 'black',\r\n    },\r\n    inputRoot: {\r\n        color: 'black',\r\n        height: '50px',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.down('lg')]: {\r\n            width: '80ch',\r\n        },\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '50ch',\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '30ch',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    Menu_Wrap: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none',\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nexport default function PersistentDrawerLeft1() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"\" color=\"primary\" >\r\n                    <Badge badgeContent={10} color=\"secondary\"  >\r\n                        <SettingsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"primary\">\r\n                    <Badge badgeContent=\"\" variant=\"dot\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen} >\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                    marginBottom=\"0px\"\r\n                >\r\n                    <Ios_Switch />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar id=\"App_Bar2\"\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n\r\n                    <IconButton\r\n                        color=\"black\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.Menu_Wrap}>\r\n                    </Typography>\r\n                    <div className={classes.search} >\r\n                        <div className={classes.searchIcon} >\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"black\">\r\n                            <Badge badgeContent=\"\" variant=\"dot\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"\" color=\"black\">\r\n                            <Badge color=\"Primary\" id=\"set_opt\" >\r\n                                <SettingsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton id=\"nav-dot\"\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"black\"\r\n                            marginBottom=\"0px\"\r\n                        >\r\n                            <Ios_Switch />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"black\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <div class=\"inside_menu\">\r\n                        <div class=\"logo_image\">\r\n                            <img src={HDWY} class=\"menu_image\" /></div>\r\n                        <div class=\"Menu_Name\">Menu</div>\r\n                    </div>\r\n\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n\r\n                </div>\r\n                <Divider />\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <DashboardRoundIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n\r\n                </List>\r\n                <div className={classes.drawerFooter} >\r\n                    <div class=\"inside_menu\">\r\n                        <div class=\"user_image\">\r\n                            <img src={maylee} class=\"menu_image\" /></div>\r\n                        <div class=\"user_Name\">Maylee Bettle</div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Divider />\r\n\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Todoweb from './Components/Todo/Todo_Web';\nimport PersistentDrawerLeft from './Components/searchnav/side_navbar';\nimport PersistentDrawerLeft1 from './Components/searchnav/side_navbar_copy';\n\n\nfunction App() {\n  return (\n    <div><Todoweb /></div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}